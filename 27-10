using System;

namespace Projektarbete_Stickspel
{
    class Program
    {
        public static void Main(string[] args)
        {
            int[] playerScore = new int[2];
            bool loopReplay = true;
            DecideColor();
            GameRules();
            Console.Clear();
            int oneortwo = OneOrTwo();
            string[] player = new string[2];
            player = NamePlayer(oneortwo);
            Console.Clear();
            while (loopReplay == true)
            {
                int[] board = new int[3] { 5, 5, 5 };                         
                bool loop1 = true;
                bool loop2 = true;
                int turn = 0;
                while (loop1 == true)
                {
                    while (loop2 == true)
                    {

                        SkriverUtSpelare(player, turn);
                        SkriverUtStickor(board);
                        if(oneortwo == 1 && turn == 1)
                        {
                            loop2 = AIinput(board);
                        }else
                        {
                            loop2 = SkriverInput(board);
                        }
                        
                    }
                    loop2 = true;
                    turn = ByterTur(turn);
                    loop1 = AvgörVinnare(board);
                }
                //skiftar tillbaka turn så att rätt vinnare visas
                turn = ByterTur(turn);
                playerScore = VisarVinnareOchScore(player, turn, playerScore);
                Console.ReadKey();
                Console.Clear();
                playAgain();



                //Vinnaren(PickBundleAndSticks(player));
                
            }
            


        }

        static bool AIinput(int[] board)
        {
            try
            {
                Random random = new Random();
                int inputOne = random.Next(1, 4);
                int inputTwo = random.Next(1, 6);
                if (inputOne >= 0 && inputOne <= 3 && inputTwo >= 1 && inputTwo <= board[inputOne - 1] && board[inputOne - 1] > 0)
                {
                    board[inputOne - 1] -= inputTwo;
                    Console.Clear();
                    return false;
                }
                else
                {
                    return true;
                }
            }
            catch
            {  
                return true;

            }
        }
        /// <summary>
        /// Förklarar spelets regler
        /// </summary>
        /// <param name="player"></param>
        static void GameRules()
        {
            Console.WriteLine("Hej och välkommen till detta spel!" + "!\n\nReglerna är följande... \n\n" +
                "1.Spelet börjar med att femton stickor placeras i tre lika stora högar. \n" +
                " börjar spelet och ska välja från vilken hög hon ska plocka \nstickorna " +
                "ifrån. Notera att man får bara välja en hög per gång.\n Därefter väljer... ");
            Console.ReadLine();

        }

        /// <summary>
        ///  Spelare får ange namn
        /// </summary>
        /// <returns></returns>
        static string[] NamePlayer(int oneortwo)
        {
            string[] player = new string[2];

            Console.WriteLine("Ange spelare 1:");
            player[0] = Console.ReadLine();

            if (oneortwo == 1)
            {
                player[1] = "Dator";
            }
            else
            {
                Console.WriteLine("Ange spelare 2:");
                player[1] = Console.ReadLine();
            }

            return player;
        }

        /// <summary>
        /// Denna anger färgen på Bakgrunden och texten
        /// </summary>
        static void DecideColor()
        {
            Console.BackgroundColor = ConsoleColor.DarkMagenta;
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.White;
        }

        /// <summary>
        /// Användare får ange hur många spelare som ska spela. 1 eller 2.
        /// </summary>
        /// <returns></returns>
        static int OneOrTwo()
        {
            bool loop = true;
            int choise = 0;
            while (loop == true)
            {
                Console.WriteLine("Är ni 1 eller 2 spelare?");
                int.TryParse(Console.ReadLine(), out choise);

                if (choise >= 1 && choise <= 2)
                {
                    loop = false;
                    Console.Clear();
                }
                else
                {
                    Console.Clear();
                    Console.Write("Någonting gick fel: ");
                }
            }

            return choise;
        }
        /// <summary>
        /// Här spelas spelet. Skriver ut stickor samt byter runda. Vinnaren returneras som en string.
        /// </summary>
        /// <param name="player"></param>
        /// <returns></returns>

        /// <summary>
        /// Skriver ut vinnaren
        /// </summary>
        /// <param name="vinnaren"></param>
        static int[] VisarVinnareOchScore(string[] player, int turn, int[] playerScore)
        {
            Console.WriteLine("Vinnaren är :" + player[turn] + "! Tack för att ni spelat!");
            
            if (turn == 0)
            {
                playerScore[0]++;
            }else 
            {
                playerScore[1]++;
            }

            Console.WriteLine("Vinststatistik:\n" + player[0] + ": " + playerScore[0] + "\n" + player[1] + ": " + playerScore[1]);

            return playerScore;
        }
        /// <summary>
        /// Metoden tar in en array och skriver ut stickor
        /// </summary>
        static void SkriverUtStickor(int[] board)
        {


            for (int i = 0; i < board.Length; i++)
            {
                for (int j = 0; j < board[i]; j++)
                {
                    Console.Write("|");
                }
                Console.WriteLine();

            }
        }
        /// <summary>
        /// Metoden tar in input från användare och returnerar en bool
        /// </summary>
        /// <param name="board"></param>
        static bool SkriverInput(int[] board)
        {

            int inputOne = 0;
            int inputTwo = 0;
            //Skriver in input och splittar den i en array
            string input = Console.ReadLine();
            string[] inputSplit = input.Split(" ");
            // ifall inte värden matas in rätt (ex. 1 2) går den tillbaka till början.

            try
            {
                Int32.TryParse(inputSplit[0], out inputOne);
                Int32.TryParse(inputSplit[1], out inputTwo);
                if (inputOne >= 0 && inputOne <= 3 && inputTwo >= 1 && inputTwo <= board[inputOne - 1] && board[inputOne - 1] > 0)
                {
                    board[inputOne - 1] -= inputTwo;
                    Console.Clear();
                    return false;
                }
                else
                {
                    Console.Clear();
                    Console.WriteLine("Något gick fel... \n");
                    return true;
                }
            }
            catch
            {
                Console.Clear();
                Console.WriteLine("Något gick fel... \n");
                return true;

            }
        }
        /// <summary>
        /// Skriver ut vilken spelares tur det är.
        /// </summary>
        /// <param name="player"></param>
        /// <param name="turn"></param>
        static void SkriverUtSpelare(string[] player, int turn)
        {

            Console.WriteLine($"{player[turn]}: Skriv in stickorna du vill ta bort (t.ex \"1 2\")\n");
        }

        /// <summary>
        /// Byter så det blir den andres tur att spela
        /// </summary>
        /// <param name="turn"></param>
        /// <returns></returns>
        static int ByterTur(int turn)
        {
            if (turn == 0)
            {
                turn = 1;
            }
            else if (turn == 1)
            {
                turn = 0;
            }

            return turn;
        }
        /// <summary>
        /// Kollar ifall antalet stickor är = 0, returnerar en bool 
        /// </summary>
        /// <param name="board"></param>
        /// <returns></returns>
        static bool AvgörVinnare(int[] board)
        {
            if (board[0] + board[1] + board[2] == 0)
            {
                return false;
            }
            else
            {
                return true;
            }
        }

        /// <summary>
        /// Frågar om man vill spela igen
        /// </summary>
        static bool playAgain()
        {

            
            bool loop = true;
            
            while (loop == true)
            {
                Console.WriteLine("Vill du spela igen? \n1. Ja\n2. Nej");
                int.TryParse(Console.ReadLine(), out int input);
                switch (input)
                {
                    case 1:
                        Console.Clear();
                        loop = false;
                        break;
                    case 2:
                        Console.Clear();
                        Console.WriteLine("Hejdå! :)");
                        Environment.Exit(0);
                        break;
                    default:
                        Console.Clear();
                        Console.WriteLine("Var god välj alternativ:\n");
                        loop = true;
                        break;


                }
            }
            return !loop;

        }
    }
}

